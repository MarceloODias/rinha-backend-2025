events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    log_format with_upstream_time '$remote_addr - $remote_user [$time_local] '
                                      '"$request" $status $body_bytes_sent '
                                      '"$http_referer" "$http_user_agent" '
                                      'rt=$request_time urt=$upstream_response_time';

    access_log /dev/stdout with_upstream_time;

    upstream apps {
        server app1:8080;
        server app2:8080;
    }

    server {
        listen 9999;

        location / {
            proxy_pass http://apps;

            # Ensure HTTP/1.1 and keep-alive support
            proxy_http_version 1.1;
            proxy_set_header Connection '';
            proxy_set_header Host $host;

            # Timeouts to prevent premature close
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            send_timeout 60s;

            # Disable buffering to reduce latency and prevent premature EOF
            proxy_request_buffering off;
            proxy_buffering off;
        }
    }
}